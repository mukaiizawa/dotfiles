" lisp.vim

setl isk=33,38,42,43,45,47-58,60-90,97-122,_

" stdlib
sy keyword lispFunc with-gensyms
sy keyword lispFunc with-encoding
sy keyword lispFunc mkstr-if
sy keyword lispFunc mkstr-aif
sy keyword lispFunc asetf
sy keyword lispFunc let1
sy keyword lispFunc ilet
sy keyword lispFunc ilet*
sy keyword lispFunc ilambda
sy keyword lispFunc alambda
sy keyword lispFunc surround
sy keyword lispFunc dostring
sy keyword lispFunc dorange
sy keyword lispFunc while
sy keyword lispFunc dowhile
sy keyword lispFunc for
sy keyword lispFunc aif
sy keyword lispFunc awhen
sy keyword lispFunc awhile
sy keyword lispFunc doawhile
sy keyword lispFunc aand
sy keyword lispFunc acond
sy keyword lispFunc dcond
sy keyword lispFunc defexe
sy keyword lispFunc chain
sy keyword lispFunc canonical-letargs
sy keyword lispFunc before
sy keyword lispFunc after
sy keyword lispFunc last1
sy keyword lispFunc single?
sy keyword lispFunc alist?
sy keyword lispFunc append1
sy keyword lispFunc conc1
sy keyword lispFunc vassoc
sy keyword lispFunc mklist
sy keyword lispFunc mkalist
sy keyword lispFunc iota
sy keyword lispFunc longer?
sy keyword lispFunc filter
sy keyword lispFunc group
sy keyword lispFunc flatten
sy keyword lispFunc prune
sy keyword lispFunc before?
sy keyword lispFunc after?
sy keyword lispFunc last-member
sy keyword lispFunc most
sy keyword lispFunc maptree
sy keyword lispFunc memoize
sy keyword lispFunc compose
sy keyword lispFunc group-by
sy keyword lispFunc hash->alist
sy keyword lispFunc empty?
sy keyword lispFunc blank?
sy keyword lispFunc mkstr
sy keyword lispFunc mksym
sy keyword lispFunc mkkey
sy keyword lispFunc explode
sy keyword lispFunc string->list
sy keyword lispFunc list->string
sy keyword lispFunc string->byte
sy keyword lispFunc byte->string
sy keyword lispFunc format-string
sy keyword lispFunc guess-encoding
sy keyword lispFunc stdin
sy keyword lispFunc stdout
sy keyword lispFunc show-hash
sy keyword lispFunc princln
sy keyword lispFunc println
sy keyword lispFunc echo
sy keyword lispFunc input-int
sy keyword lispFunc input-str
sy keyword lispFunc input-char
sy keyword lispFunc read-as-list
sy keyword lispFunc dir-pathname?
sy keyword lispFunc pathname-as-directory
sy keyword lispFunc directory-wildcard
sy keyword lispFunc file-exists?
sy keyword lispFunc pathname-as-file
sy keyword lispFunc parent-directory
sy keyword lispFunc read-from
sy keyword lispFunc write-to
sy keyword lispFunc write-to!
sy keyword lispFunc mkdir
sy keyword lispFunc mkfile
sy keyword lispFunc mkfile!
sy keyword lispFunc ls
sy keyword lispFunc mapfile
sy keyword lispFunc run-on?
sy keyword lispFunc parse-int
sy keyword lispFunc parse-sym
sy keyword lispFunc getopt
sy keyword lispFunc expand-hyphen
sy keyword lispFunc to-executable
sy keyword lispFunc exit
sy keyword lispFunc call
sy keyword lispFunc args
sy keyword lispFunc usage
sy keyword lispKey :keyword
sy keyword lispKey :extension
sy keyword lispKey :external-format
sy keyword lispKey :enc :utf-8 :uft-16 :cp932 :euc-jp
sy keyword lispKey :ff :unix :windows :CR :CRLF
sy keyword lispKey :print-object
sy keyword lispKey :vector
sy keyword lispKey :capitalize
sy keyword lispKey :recursive
sy keyword lispKey :left :right :float :padding
sy keyword lispKey :title :desc :opts :foot

" ahead-reader
syn keyword lispFunc with-ahead-reader
syn keyword lispFunc with-string-ahead-reader
syn keyword lispFunc with-open-ahead-reader

" coordinate-manager
syn keyword lispFunc with-coordinates

" database-manager
syn keyword lispFunc deftable
syn keyword lispFunc defschema

" xml-manager
sy keyword lispFunc with-html-output
sy keyword lispKey :a
sy keyword lispKey :abbr
sy keyword lispKey :acronym
sy keyword lispKey :address
sy keyword lispKey :applet
sy keyword lispKey :area
sy keyword lispKey :article
sy keyword lispKey :aside
sy keyword lispKey :audio
sy keyword lispKey :b
sy keyword lispKey :base
sy keyword lispKey :basefont
sy keyword lispKey :bdi
sy keyword lispKey :bdo
sy keyword lispKey :big
sy keyword lispKey :blockquote
sy keyword lispKey :body
sy keyword lispKey :br
sy keyword lispKey :button
sy keyword lispKey :canvas
sy keyword lispKey :caption
sy keyword lispKey :center
sy keyword lispKey :cite
sy keyword lispKey :code
sy keyword lispKey :col
sy keyword lispKey :colgroup
sy keyword lispKey :datalist
sy keyword lispKey :dd
sy keyword lispKey :del
sy keyword lispKey :details
sy keyword lispKey :dfn
sy keyword lispKey :dialog
sy keyword lispKey :dir
sy keyword lispKey :div
sy keyword lispKey :dl
sy keyword lispKey :dt
sy keyword lispKey :em
sy keyword lispKey :embed
sy keyword lispKey :fieldset
sy keyword lispKey :figcaption
sy keyword lispKey :figure
sy keyword lispKey :font
sy keyword lispKey :footer
sy keyword lispKey :form
sy keyword lispKey :frame
sy keyword lispKey :frameset
sy keyword lispKey :h1
sy keyword lispKey :h2
sy keyword lispKey :h3
sy keyword lispKey :h4
sy keyword lispKey :h5
sy keyword lispKey :h6
sy keyword lispKey :head
sy keyword lispKey :header
sy keyword lispKey :hr
sy keyword lispKey :html
sy keyword lispKey :i
sy keyword lispKey :iframe
sy keyword lispKey :img
sy keyword lispKey :input
sy keyword lispKey :ins
sy keyword lispKey :kbd
sy keyword lispKey :keygen
sy keyword lispKey :label
sy keyword lispKey :legend
sy keyword lispKey :li
sy keyword lispKey :link
sy keyword lispKey :main
sy keyword lispKey :mark
sy keyword lispKey :menu
sy keyword lispKey :menuitem
sy keyword lispKey :meta
sy keyword lispKey :meter
sy keyword lispKey :nav
sy keyword lispKey :noframes
sy keyword lispKey :noscript
sy keyword lispKey :object
sy keyword lispKey :ol
sy keyword lispKey :optgroup
sy keyword lispKey :option
sy keyword lispKey :output
sy keyword lispKey :p
sy keyword lispKey :param
sy keyword lispKey :pre
sy keyword lispKey :progress
sy keyword lispKey :q
sy keyword lispKey :rp
sy keyword lispKey :rt
sy keyword lispKey :ruby
sy keyword lispKey :s
sy keyword lispKey :samp
sy keyword lispKey :script
sy keyword lispKey :section
sy keyword lispKey :select
sy keyword lispKey :small
sy keyword lispKey :source
sy keyword lispKey :span
sy keyword lispKey :strike
sy keyword lispKey :strong
sy keyword lispKey :style
sy keyword lispKey :sub
sy keyword lispKey :summary
sy keyword lispKey :sup
sy keyword lispKey :table
sy keyword lispKey :tbody
sy keyword lispKey :td
sy keyword lispKey :textarea
sy keyword lispKey :tfoot
sy keyword lispKey :th
sy keyword lispKey :thead
sy keyword lispKey :title
sy keyword lispKey :tr
sy keyword lispKey :track
sy keyword lispKey :tt
sy keyword lispKey :u
sy keyword lispKey :ul
sy keyword lispKey :var
sy keyword lispKey :video
sy keyword lispKey :wbr
sy keyword lispKey :time

" predicates
sy keyword lispFunc adjustable-array?
sy keyword lispFunc alpha-char?
sy keyword lispFunc alphanumeric?
sy keyword lispFunc array-has-fill-pointer?
sy keyword lispFunc array-in-bounds?
sy keyword lispFunc array?
sy keyword lispFunc bit-vector?
sy keyword lispFunc both-case?
sy keyword lispFunc bound?
sy keyword lispFunc char-greater?
sy keyword lispFunc char-less?
sy keyword lispFunc char-not-greater?
sy keyword lispFunc char-not-less?
sy keyword lispFunc character?
sy keyword lispFunc compiled-function?
sy keyword lispFunc complex?
sy keyword lispFunc cons?
sy keyword lispFunc constant?
sy keyword lispFunc digit-char?
sy keyword lispFunc end?
sy keyword lispFunc equal?
sy keyword lispFunc even?
sy keyword lispFunc fbound?
sy keyword lispFunc float?
sy keyword lispFunc function?
sy keyword lispFunc graphic-char?
sy keyword lispFunc hash-table?
sy keyword lispFunc input-stream?
sy keyword lispFunc integer?
sy keyword lispFunc interactive-stream?
sy keyword lispFunc keyword?
sy keyword lispFunc list?
sy keyword lispFunc logbit?
sy keyword lispFunc lower-case?
sy keyword lispFunc minus?
sy keyword lispFunc next-method?
sy keyword lispFunc number?
sy keyword lispFunc odd?
sy keyword lispFunc open-stream?
sy keyword lispFunc output-stream?
sy keyword lispFunc package?
sy keyword lispFunc pathname-match?
sy keyword lispFunc pathname?
sy keyword lispFunc plus?
sy keyword lispFunc random-state?
sy keyword lispFunc rational?
sy keyword lispFunc readtable?
sy keyword lispFunc real?
sy keyword lispFunc rempro?
sy keyword lispFunc simple-bit-vector?
sy keyword lispFunc simple-string?
sy keyword lispFunc simple-vector?
sy keyword lispFunc slot-bound?
sy keyword lispFunc slot-exists?
sy keyword lispFunc special-operator?
sy keyword lispFunc standard-char?
sy keyword lispFunc stream?
sy keyword lispFunc string-greater?
sy keyword lispFunc string-less?
sy keyword lispFunc string-not-greater?
sy keyword lispFunc string-not-less?
sy keyword lispFunc string?
sy keyword lispFunc subset?
sy keyword lispFunc subtype?
sy keyword lispFunc symbol?
sy keyword lispFunc tail?
sy keyword lispFunc type?
sy keyword lispFunc upper-case?
sy keyword lispFunc vector-po?
sy keyword lispFunc vector?
sy keyword lispFunc wild-pathname?
sy keyword lispFunc y-or-n?
sy keyword lispFunc yes-or-no?
sy keyword lispFunc zero?
sy keyword lispFunc eq?
sy keyword lispFunc eql?
sy keyword lispFunc symbol?
sy keyword lispFunc null?

" ltk
sy keyword lispFunc with-ltk
sy keyword lispFunc with-ltk-handlers
