
Library AHEAD-READER

Structure ahead-reader

Macro with-ahead-reader, with-string-ahead-reader, with-open-ahead-reader
with-ahead-reader (reader &optional (stream *standard-output*)) &body body
with-string-ahead-reader (reader string) &body
with-open-ahead-reader (reader pathname &key if-does-not-exist) &body body

Function get-curr, get-next
get-curr reader => current-character
get-next reader => next-character

Function reader-curr-in?, reader-next-in?
reader-curr-in? reader &rest args => find-current-character?
reader-next-in? reader &rest args => find-next-character?

Function reach-eof?
reach-eof? reader => generalized-boolean

Function read-next
read-next reader &key (cache t) => reader
read next and return reader.

Function read-if
read-if function reader &key (cache t) => reader
read next character untill function return true.

Function read-space
read-space reader &key (cache t) => reader
read continuous spaces.

Function read-number
read-number reader &key (cache t) => reader
read next untill context in number

Function read-paren
read-paren reader &key (cache t) => reader
read inner parren.
paren do not chache.

Function read-segment
read-segment reader &key (cache t) => reader
Read up to the next character comes out twice.
next character and final character (it means segment character) do not chache.

Function add-char, append-str
add-char reader character => reader
append-str reader string => reader
put character or append string to buffer of reader.

Function get-buf, refer-buf
get-buf reader => buffer
refer-buf reader => buffer
get-buf and refer-buf each get buffer of reader.
but get-buf clear the buffer of reader.

