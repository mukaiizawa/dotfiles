Library DATABASE-MANAGER

Macro defschema

Structure table, column

Function get-tables-name
(get-table-name table)
;; => `shema'.`phisical-name'

Function get-primarykey
(get-table-name table)
;; => '("key1" "key2" ... "keyn")

Function tables->nodes, tables->edges, tables->graph
convert from table-list to graph-utils node, edge and graph

Function tables->create-sql
convert from table-list to create table sql (only support `oracle database')

Examples:
;; make schema
(defparameter schema
  (defschema common "共通スキーマ"
    (user_tbl
      "ユーザーマスタ"
      (user_id "ユーザーID" :primarykey? t :type "varchar2" :length 8)
      (user_name "ユーザー名" :type "varchar2" :required? t))
    (group_tbl
      "部署テーブル"
      (group_id "部署ID" :primarykey? t  :type "varchar2" :length 8)
      (group_name "部署名" :required? t :type "varchar2" :length 20))
    (user_group_tbl
      "ユーザー部署中間テーブル"
      (user_id "ユーザーID" :primarykey? t :foreignkey '(user_tbl user_id) :type "varchar2" :length 8)
      (group_id "部署ID" :primarykey? t :foreignkey '(group_tbl group_id) :type "varchar2" :length 8))))

;; create ER Diagram
(dot (schema->graph schema) :file "sample-er")

;; create `create-table' sql
(schema->create-sql schema)
